NAME,Dockerized,JVM_PARAMETERS,INPUT_PARAMETERS,SWAGGER_URL,TARGET_URL,COPY_ADDITIONAL_FILES,MOCK_OAUTH,DEPENDS_ON,SERVICES
familie-ba-sak,TRUE,-DAZUREAD_TOKEN_ENDPOINT_URL=http://fake-azure-token-endpoint.no:8080 -DAZURE_OPENID_CONFIG_TOKEN_ENDPOINT=bar -DAZURE_APP_CLIENT_ID=bar -DNAIS_APP_NAME=bar -DUNLEASH_SERVER_API_URL=http://fake-unleash-server-api.no:8080 -DUNLEASH_SERVER_API_TOKEN=bar -DBA_SAK_CLIENT_ID=some-audience,--server.port=8080 --spring.profiles.active=dev --management.server.port=-1 --server.ssl.enabled=false --spring.datasource.url=jdbc:postgresql://db:5432/familiebasak --spring.datasource.username=postgres --spring.datasource.password=password --sentry.logging.enabled=false --sentry.environment=local --funksjonsbrytere.kafka.producer.enabled=false --funksjonsbrytere.enabled=false --logging.level.root=OFF --logging.config=classpath:logback-spring.xml --logging.level.org.springframework=INFO --no.nav.security.jwt.issuer.azuread.discoveryurl=http://mock-oauth2-server:8083/azuread/.well-known/openid-configuration --prosessering.rolle=928636f4-fd0d-4149-978e-a6fb68bb19de --FAMILIE_EF_SAK_API_URL=http://fake-familie-ef-sak/api --FAMILIE_KLAGE_URL=http://fake-familie-klage --FAMILIE_BREV_API_URL=http://fake-familie-brev --FAMILIE_BA_INFOTRYGD_FEED_API_URL=http://fake-familie-ba-infotrygd-feed/api --FAMILIE_BA_INFOTRYGD_API_URL=http://fake-familie-ba-infotrygd --FAMILIE_TILBAKE_API_URL=http://fake-familie-tilbake/api --PDL_URL=http://fake-pdl-api.default --FAMILIE_INTEGRASJONER_API_URL=http://fake-familie-integrasjoner/api --FAMILIE_OPPDRAG_API_URL=http://fake-familie-oppdrag/api --SANITY_FAMILIE_API_URL=http://fake-xsrv1mh6.apicdn.sanity.io/v2021-06-07/data/query/ba-brev --ECB_API_URL=http://fake-data-api.ecb.europa.eu/service/data/EXR/ --rolle.veileder=93a26831-9866-4410-927b-74ff51a9107c --rolle.saksbehandler=d21e00a4-969d-4b28-8782-dc818abfae65 --rolle.beslutter=9449c153-5a1e-44a7-84c6-7cc7a8867233 --rolle.forvalter=c62e908a-cf20-4ad0-b7b3-3ff6ca4bf38b --rolle.kode6=5ef775f2-61f8-4283-bf3d-8d03f428aa14 --rolle.kode7=ea930b6b-9397-44d9-b9e6-f4cf527a632a,http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,TRUE,"","[{""image_name"": ""postgres:13.13"", ""port"": 5432.0, ""tmp_fs"": ""/var/lib/postgresql/data"", ""environment"": ""POSTGRES_PASSWORD: password;POSTGRES_HOST_AUTH_METHOD: trust;POSTGRES_DB: familiebasak"", ""volume"": """", ""health_check_command"": """"}]"
pay-publicapi,TRUE,-Ddw.server.applicationConnectors[0].port=8080 -Ddw.server.adminConnectors[0].port=0 -Ddw.redis.endpoint=db:6379,server em_config.yaml,http://localhost:8080/assets/swagger.json,http://localhost:8080,TRUE,FALSE,"","[{""image_name"": ""redis:7.2.3"", ""port"": 6379.0, ""tmp_fs"": """", ""environment"": """", ""volume"": """", ""health_check_command"": """"}]"
session-service,TRUE,"",--server.port=8080 --spring.data.mongodb.uri=mongodb://db:27017/mongo_db --spring.cache.type=NONE,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"","[{""image_name"": ""mongo:6.0"", ""port"": 27017.0, ""tmp_fs"": ""/data/db"", ""environment"": """", ""volume"": """", ""health_check_command"": """"}]"
bibliothek,TRUE,"",--server.port=8080 --databaseUrl=mongodb://db:27017/mongo_db --spring.data.mongodb.uri=mongodb://db:27017/mongo_db --app.storagePath=./tmp/bibliothek/,http://localhost:8080/openapi,http://localhost:8080,FALSE,FALSE,"","[{""image_name"": ""mongo:6"", ""port"": 27017.0, ""tmp_fs"": ""/data/db"", ""environment"": """", ""volume"": """", ""health_check_command"": """"}]"
reservations-api,TRUE,-Dfile.encoding=ISO-8859-1,--server.port=8080 --databaseUrl=mongodb://db:27017/mongo_db --spring.data.mongodb.uri=mongodb://db:27017/mongo_db --app.jwt.secret=abcdef012345678901234567890123456789abcdef012345678901234567890123456789,http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,FALSE,"","[{""image_name"": ""bitnami/mongodb:4.4"", ""port"": 27017.0, ""tmp_fs"": ""/bitnami/mongodb"", ""environment"": ""MONGODB_REPLICA_SET_MODE: primary;ALLOW_EMPTY_PASSWORD: yes"", ""volume"": ""../scripts/dockerize/data/additional_files/reservations-api/mongo_import.sh:/docker-entrypoint-initdb.d/mongo_import.sh;../scripts/dockerize/data/additional_files/reservations-api/init.json:/fixtures/init.json"", ""health_check_command"": """"}]"
catwatch,TRUE,-Dserver.port=8080 -Dspring.datasource.url=jdbc:h2:mem:testdb -Dspring.jpa.database-platform=org.hibernate.dialect.H2Dialect -Dspring.datasource.username=sa -Dspring.datasource.password,"",http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
cwa-verification,TRUE,-Dspring.datasource.url=jdbc:h2:mem:testdb -Dspring.datasource.driver-class-name=org.h2.Driver -Dspring.datasource.username=sa -Dspring.datasource.password,"--server.port=8080 --spring.profiles.active=local,external,internal --management.server.port=-1 --server.ssl.enabled=false --cwa-testresult-server.url=http://cwa-testresult-server:8088",http://localhost:8080/api-docs.json,http://localhost:8080,FALSE,FALSE,"",
features-service,TRUE,-Dspring.datasource.url=jdbc:h2:mem:testdb -Dspring.jpa.database-platform=org.hibernate.dialect.H2Dialect -Dspring.datasource.username=sa -Dspring.datasource.password,--server.port=8080,http://localhost:8080/swagger.json,http://localhost:8080,FALSE,FALSE,"",
gestaohospital,TRUE,"",--server.port=8080 --liquibase.enabled=false --spring.data.mongodb.uri=mongodb://db:27017/mongo_db --spring.datasource.username=sa --spring.datasource.password --dg-toolkit.derby.port=0 --spring.cache.type=NONE,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"","[{""image_name"": ""mongo:6"", ""port"": 27017.0, ""tmp_fs"": ""/data/db"", ""environment"": """", ""volume"": """", ""health_check_command"": """"}]"
languagetool,TRUE,"",--port 8080 --public,http://localhost:8080/v2/swagger,http://localhost:8080,FALSE,FALSE,"",
ocvn,TRUE,-Dliquibase.enabled=false -Dspring.data.mongodb.uri=mongodb://db:27017/mongo_db -Dspring.datasource.url=jdbc:h2:mem:testdb -Dspring.datasource.driver-class-name=org.h2.Driver -Dspring.jpa.database-platform=org.hibernate.dialect.H2Dialect -Dspring.jpa.properties.hibernate.enable_lazy_load_no_trans=true -Dspring.datasource.username=sa -Dspring.datasource.password -Ddg-toolkit.derby.port=0 -Dspring.cache.type=NONE -Dspring.datasource.data=file:./init_db.sql,--server.port=8080,http://localhost:8080/v2/api-docs?group=1ocDashboardsApi,http://localhost:8080,TRUE,FALSE,"","[{""image_name"": ""mongo:3.2"", ""port"": 27017.0, ""tmp_fs"": ""/data/db"", ""environment"": """", ""volume"": """", ""health_check_command"": """"}]"
proxyprint,TRUE,-Dspring.datasource.url=jdbc:h2:mem:testdb -Dspring.jpa.database-platform=org.hibernate.dialect.H2Dialect -Dspring.datasource.username=sa -Dspring.datasource.password -Dspring.jpa.show-sql=false -Dspring.jpa.hibernate.ddl-auto=create-drop -Xmx4G,--server.port=8080,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
rest-ncs,TRUE,"",--server.port=8080,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
rest-news,TRUE,"",--server.port=8080,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
rest-scs,TRUE,"",--server.port=8080,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
restcountries,TRUE,"",--server.port=8080,http://localhost:8080/openapi.yaml,http://localhost:8080,FALSE,FALSE,"",
scout-api,TRUE,"",server scout_api_evomaster.yml,http://localhost:8080/api/swagger.json,http://localhost:8080,TRUE,FALSE,"",
genome-nexus,TRUE,"",--server.port=8080 --spring.data.mongodb.uri=mongodb://db:27017/mongo_db --spring.cache.type=NONE,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"","[{""image_name"": ""mongo:3.6.2"", ""port"": 27017.0, ""tmp_fs"": ""/data/db"", ""environment"": """", ""volume"": """", ""health_check_command"": """"}]"
market,TRUE,"-Dspring.datasource.url=""jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1"" -Dspring.datasource.username=sa -Dspring.datasource.password",--server.port=8080,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
blogapi,TRUE,"","--server.port=8080 --spring.datasource.url=""jdbc:mysql://db:3306/blogapi?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true""",http://localhost:8080/blogapi.json,http://localhost:8080,FALSE,FALSE,"db","[{""image_name"": ""mysql:8.0"", ""port"": 3306.0, ""tmp_fs"": ""/var/lib/mysql"", ""environment"": ""MYSQL_ROOT_PASSWORD: root;MYSQL_DATABASE: blogapi"", ""volume"": ""../scripts/dockerize/data/additional_files/blogapi/blogapi.sql:/docker-entrypoint-initdb.d/blogapi.sql;../scripts/dockerize/data/additional_files/blogapi/data.sql:/docker-entrypoint-initdb.d/data.sql"", ""health_check_command"": [""CMD"", ""mysqladmin"", ""ping"", ""-h"", ""localhost""]}]"
user-management,TRUE,"","--server.port=8080 --spring.datasource.url=""jdbc:mysql://db:3306/users?useSSL=false&allowPublicKeyRetrieval=true""",http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"db","[{""image_name"": ""mysql:8.0"", ""port"": 3306.0, ""tmp_fs"": ""/var/lib/mysql"", ""environment"": ""MYSQL_ROOT_PASSWORD: root;MYSQL_DATABASE: users"", ""volume"": """", ""health_check_command"": [""CMD"", ""mysqladmin"", ""ping"", ""-h"", ""localhost""]}]"
youtube-mock,TRUE,"",--server.port=8080,http://localhost:8080/swagger.yaml,http://localhost:8080,FALSE,FALSE,"",
person-controller,TRUE,"",--server.port=8080 --spring.data.mongodb.uri=mongodb://db:27017 --spring.cache.type=None,http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,FALSE,"","[{""image_name"": ""mongo:7.0"", ""port"": 27017.0, ""tmp_fs"": ""/data/db"", ""environment"": """", ""volume"": """", ""health_check_command"": """"}]"
tracking-system,TRUE,"","--server.port=8080 --spring.profiles.active=dev --spring.datasource.url=""jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1"" --spring.datasource.username=sa --spring.datasource.password",http://localhost:8080/app/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
tiltaksgjennomforing,TRUE,"",--server.port=8080 --spring.profiles.active=dev-gcp-labs --spring.datasource.driverClassName=org.postgresql.Driver --spring.sql.init.platform=postgres --no.nav.security.jwt.issuer.aad.discoveryurl=http://mock-oauth2-server:8083/aad/.well-known/openid-configuration --no.nav.security.jwt.issuer.aad.accepted_audience=aad --no.nav.security.jwt.issuer.system.discoveryurl=http://mock-oauth2-server:8083/system/.well-known/openid-configuration --no.nav.security.jwt.issuer.system.accepted_audience=system --no.nav.security.jwt.issuer.tokenx.discoveryurl=http://mock-oauth2-server:8083/tokenx/.well-known/openid-configuration --no.nav.security.jwt.issuer.tokenx.accepted_audience=tokenx --management.server.port=-1 --server.ssl.enabled=false --spring.datasource.url=jdbc:postgresql://db:5432/tiltaksgjennomforing  --spring.datasource.username=postgres --spring.datasource.password=password --sentry.logging.enabled=false --sentry.environment=local --logging.level.root=OFF --logging.config=classpath:logback-spring.xml --logging.level.org.springframework=INFO,http://localhost:8080/tiltaksgjennomforing-api/v3/api-docs,http://localhost:8080,FALSE,TRUE,"","[{""image_name"": ""postgres:13.13"", ""port"": 5432, ""tmp_fs"": ""/var/lib/postgresql/data"", ""environment"": ""POSTGRES_PASSWORD: password;POSTGRES_HOST_AUTH_METHOD: trust;POSTGRES_DB: tiltaksgjennomforing"", ""volume"": """", ""health_check_command"": """"}]"
ohsome-api,TRUE,"",--server.port=8080 --database.db=heidelberg,http:///localhost:8080/docs?group=Data%20Aggregation,http://localhost:8080,TRUE,FALSE,"",
spring-batch-rest,TRUE,"",--server.port=8080 --spring.batch.job.enabled=false --lastNamePrefix= --upperCase=false,http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,FALSE,"",
spring-rest-example,TRUE,"","--server.port=8080 --spring.datasource.username=root --spring.datasource.password=root --spring.datasource.url=""jdbc:mysql://db:3306/example?useSSL=false&allowPublicKeyRetrieval=true""",http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,FALSE,"db","[{""image_name"": ""mysql:8.0"", ""port"": 3306.0, ""tmp_fs"": ""/var/lib/mysql"", ""environment"": ""MYSQL_ROOT_PASSWORD: root;MYSQL_DATABASE: example"", ""volume"": """", ""health_check_command"": [""CMD"", ""mysqladmin"", ""ping"", ""-h"", ""localhost""]}]"
erc20-rest-service,TRUE,"",--server.port=8080,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"",
spring-actuator-demo,TRUE,"",--server.port=8080,http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,FALSE,"",
webgoat,TRUE,-Drunning.in.docker=true,"--webgoat.port=8080 --webwolf.port=8081 --server.address=""0.0.0.0"" --spring.profiles.active=dev --spring.datasource.driver-class-name=org.h2.Driver --spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect --spring.jpa.properties.jakarta.persistence.schema-generation.scripts.action=none --spring.sql.init.mode=never --spring.datasource.url=""jdbc:h2:file:./test"" --spring.datasource.username=sa --spring.datasource.password",http://localhost:8080/WebGoat/v3/api-docs,http://localhost:8080,TRUE,FALSE,"",
swagger-petstore,TRUE,"",8080,http://localhost:8080/api/v3/openapi.json,http://localhost:8080,TRUE,FALSE,"",
http-patch-spring,TRUE,"",--server.port=8080,http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,FALSE,"",
spring-ecommerce,TRUE,-Dfile.encoding=ISO-8859-1,--server.port=8080 --spring.datasource.host=mongodb --spring.datasource.port=27017 --spring.datasource.database=test --spring.data.mongodb.uri=mongodb://mongodb:27017/test --spring.redis.host=redis --spring.redis.port=6379 --spring.data.elasticsearch.cluster-name=elasticsearch --spring.data.elasticsearch.cluster-nodes=elasticsearch:9300 --spring.elasticsearch.rest.uris=elasticsearch:9200 --spring.data.elasticsearch.host=elasticsearch --spring.data.elasticsearch.port=9300 --spring.cache.type=NONE,http://localhost:8080/v2/api-docs,http://localhost:8080,FALSE,FALSE,"","[{""name"": ""mongodb"", ""image_name"": ""mongo:7.0"", ""port"": 27017.0, ""tmp_fs"": ""/data/db"", ""environment"": ""MONGODB_REPLICA_SET_MODE: primary;ALLOW_EMPTY_PASSWORD: yes"", ""volume"": ""../scripts/dockerize/data/additional_files/spring-ecommerce/mongo_import.sh:/docker-entrypoint-initdb.d/mongo_import.sh;../scripts/dockerize/data/additional_files/spring-ecommerce/init.json:/fixtures/init.json"", ""health_check_command"": """"}, {""name"": ""redis"", ""image_name"": ""redis:7.0.11"", ""port"": 6379, ""tmp_fs"": """", ""environment"": """", ""volume"": """", ""health_check_command"": """"}, {""name"": ""elasticsearch"",""image_name"": ""docker.elastic.co/elasticsearch/elasticsearch:6.8.23"", ""port"": 9300, ""tmp_fs"": ""/usr/share/elasticsearch/data"", ""environment"": ""- discovery.type=single-node;- cluster.name=elasticsearch;- ES_JAVA_OPTS=-Xms512m -Xmx512m;- xpack.security.enabled=false"", ""volume"": """", ""health_check_command"": """"}]"
quartz-manager,TRUE,,--server.port=8080 --quartz-manager.security.accounts.in-memory.users[0].username=foo --quartz-manager.security.accounts.in-memory.users[0].password=bar --quartz-manager.security.accounts.in-memory.users[0].roles[0]=admin --quartz-manager.security.accounts.in-memory.users[1].username=foo2 --quartz-manager.security.accounts.in-memory.users[1].password=bar --quartz-manager.security.accounts.in-memory.users[1].roles[0]=admin,http://localhost:8080/v3/api-docs,http://localhost:8080,FALSE,FALSE,"",
